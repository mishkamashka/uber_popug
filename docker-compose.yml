version: '3.9'

services:
  auth-service:
    build:
      context: .
      dockerfile: build/Dockerfile
      args:
        APP_NAME: auth-service
    environment:
      REPOSITORY_CONNECTION_STRING: mongodb://root:password@mongo:27017
      KAFKA_PRODUCER_BROKERS: kafka
      KAFKA_PRODUCER_TOPIC: some-topic
    ports:
      - 8080:8080
    depends_on:
      - pgsql
      - kafka

  pgsql: # NOTE: Databases should only be edited in `./containers/db/test/pgsql/0_databases.sql`
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - ./containers/db/pgsql:/docker-entrypoint-initdb.d

  kafka:
    image: bitnami/kafka:3.1.1
    environment:
      KAFKA_ENABLE_KRAFT: 'true'
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
      ALLOW_PLAINTEXT_LISTENER: 'true'
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_CFG_MESSAGE_MAX_BYTES: 104857600
      KAFKA_CFG_NUM_PARTITIONS: 2
    ports:
      - 9092:9092
